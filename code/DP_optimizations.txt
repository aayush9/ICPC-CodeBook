A[i][j] : The smallest k that gives optimal answer

Divide and Conquer:
  dp[i][j] = min(k < j){dp[i - 1][k] + C[k][j]}
  O(kn^2) -> O(knlog(n))

  Conditions:
    A[i][j] <= A[i][j + 1] OR
    C[a][d] + C[b][c] >= C[a][c] + C[b][d] where a < b < c < d

  Short Description:
    A[i][1] <= A[i][2] <= ... <= A[i][n]

Knuth Optimization:
  dp[i][j] = min(i < k < j){dp[i][k] + dp[k][j]} + C[i][j] 
  O(n^3) -> O(n^2)

  Conditions:
    A[i, j - 1] <= A[i, j] <= A[i + 1, j] OR
    C[a][d] + C[b][c] >= C[a][c] + C[b][d] AND
    C[b][c] <= C[a][d] where a <= b <= c <= d

  Short Description:
    For dp[i][j], loop k from A[i][j - 1] to A[i + 1][j]