<snippet>
	<description>2D Seg-Tree</description>
	<content><![CDATA[//From: https://stackoverflow.com/questions/25121878/2d-segment-quad-tree-explanation-with-c/25122078
struct Segtree2d {
	int n,m,INF=(1<<30),Max=5005;
	vector<int> T;
	void init(int n, int m) {
		this -> n = n;
		this -> m = m;
		T.resize(4*n*m);
		build(1, 1, 1, n, n);
	}

	int build(int node, int a1, int b1, int a2, int b2) {
		if (a1 > a2 or b1 > b2) return  -INF;
		if (a1 == a2 and b1 == b2) return T[node] = dp[a1][b1];
		T[node] = max({ build(4 * node - 2, a1, b1, (a1 + a2) / 2, (b1 + b2) / 2 ),
				build(4 * node - 1, (a1 + a2) / 2 + 1, b1, a2, (b1 + b2) / 2 ),
				build(4 * node + 0, a1, (b1 + b2) / 2 + 1, (a1 + a2) / 2, b2),
				build(4 * node + 1, (a1 + a2) / 2 + 1, (b1 + b2) / 2 + 1, a2, b2) });
		return T[node];
	}

	int query(int node, int a1, int b1, int a2, int b2, int x1, int y1, int x2, int y2) {
		if (x1 > a2 or y1 > b2 or x2 < a1 or y2 < b1 or a1 > a2 or b1 > b2) return  -INF;
		if (x1 <= a1 and y1 <= b1 and a2 <= x2 and b2 <= y2) return T[node];
		return max({query(4 * node - 2, a1, b1, (a1 + a2) / 2, (b1 + b2) / 2, x1, y1, x2, y2),
				query(4 * node - 1, (a1 + a2) / 2 + 1, b1, a2, (b1 + b2) / 2, x1, y1, x2, y2),
				query(4 * node + 0, a1, (b1 + b2) / 2 + 1, (a1 + a2) / 2, b2, x1, y1, x2, y2),
				query(4 * node + 1, (a1 + a2) / 2 + 1, (b1 + b2) / 2 + 1, a2, b2, x1, y1, x2, y2)});
	}
	int query(int x1, int y1, int x2, int y2) {
		return query(1, 1, 1, n, m, x1, y1, x2, y2);
	}

	int update(int node, int a1, int b1, int a2, int b2, int x, int y, int value) {
		if (a1 > a2 or b1 > b2) return  -INF;
		if (x > a2 or y > b2 or x < a1 or y < b1) return T[node];
		if (x == a1 and y == b1 and x == a2 and y == b2) return T[node] = value;
		return T[node] = max({update(4 * node - 2, a1, b1, (a1 + a2) / 2, (b1 + b2) / 2, x, y, value),
				update(4*node - 1, (a1 + a2) / 2 + 1, b1, a2, (b1 + b2) / 2, x, y, value),
				update(4*node + 0, a1, (b1 + b2) / 2 + 1, (a1 + a2) / 2, b2, x, y, value),
				update(4*node + 1, (a1 + a2) / 2 + 1, (b1 + b2) / 2 + 1, a2, b2, x, y, value)});
	}
	void update(int x, int y, int value) {
		update(1, 1, 1, n, m, x, y, value);
	}
};]]></content>
	<tabTrigger>quad</tabTrigger>
	<scope>source.c, source.c++, source.objc, source.objc++</scope>
</snippet>
